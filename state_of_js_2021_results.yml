locale: en-US
translations:
    ###########################################################################
    # Introduction
    ###########################################################################

    - key: sections.introduction.description
      t: |

            <span class="first-letter">M</span> uchas cosas pasaron en el 2021. ¡Tanto, de hecho, que la encuesta se retrasó hasta 2022! 
            
            Entre una gran cantidad de herramientas de compilación más rápidas y una nueva cosecha de marcos de back-end, el mundo de JavaScript siguió evolucionando. E hicimos todo lo posible para mantenernos al día, dándole a esta encuesta un par de nuevas actualizaciones ([leer más sobre las novedades](https://dev.to/sachagreif/whats-new-in-the-20212022-state-of -javascript-4jkf)), como nuevos tipos de preguntas, la capacidad de hacer referencias cruzadas de dos puntos de datos (como salarios anuales por nivel de experiencia) e incluso una forma de personalizar los gráficos para mostrar tus propias perspectivas. Obten más información sobre [las novedades de este año](https://dev.to/sachagreif/whats-new-in-the-2021-state-of-javascript-survey-4eej) (Artículo en Inglés).
           
            Sin embargo, no todo fue viento en popa. Tuvimos que lidiar con una [fuga de datos](https://dev.to/sachagreif/disclosing-a-state-of-javascriptstate-of-css-data-breach-2lg1) que afortunadamente no parece tener malas consecuencias. Y nos esforzamos constantemente para que la encuesta sea más inclusiva, más accesible y más justa.
            
            Aún así, a pesar de que la encuesta sólo puede representar una pequeña parte del ecosistema de JavaScript, ¡esperamos que encuentres interesantes los datos encuestados!

            <span class="conclusion__byline">– Sacha Greif</span>

    ###########################################################################
    # Tshirt
    ###########################################################################

    - key: sections.tshirt.title
      t: Camiseta

    - key: sections.tshirt.description
      t: |
          ## Apoya la encuesta con la camiseta del estado de JavaScript

          Entre la mala calidad del video, los voluminosos casetes y tener que rebobinar, no hay mucho que perderse de la era del VHS. Pero una cosa que *sí* extrañamos son las asombrosas imágenes de los 90 que solían adornar las cintas VHS en blanco.

          ¡Pero ahora, gracias al talentoso Christopher Kirk-Nielsen, puedes disfrutar de toda esta exuberancia retro mientras celebras tu amor por CSS al mismo tiempo!

    - key: tshirt.about
      t: Acerca de la camiseta

    - key: tshirt.description
      t: |
          Usamos una camiseta de alta calidad, supersuave con un ajuste delgado impresa por nuestros socios de Cotton Bureau.
          We use a high-quality, super-soft tri-blend shirt with a slim fit printed by our partners at Cotton Bureau. 

    - key: tshirt.getit
      t: Consíguela

    - key: tshirt.price
      t: USD $29 + envío

    - key: tshirt.designer.heading
      t: Sobre el diseñador

    - key: tshirt.designer.name
      t: Christopher Kirk-Nielsen

    - key: tshirt.designer.bio
      t: |
        Originario de Francia, pero ahora con sede en los Estados Unidos, Chris no solo es un desarrollador front-end increíble, sino también un ilustrador talentoso que se especializa en imágenes retro. De hecho, ¡te animamos a que también veas sus [otros diseños de camisetas] (https://chriskirknielsen.com/designs)!

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.user_info.description
      t: |
          Este año, **16,085** encuestados participaron en la encuesta, y 
          para ayudar a resaltar las diferentes voces y sacar a la luz las ideas más profundas, hicimos un especial
          esfuerzo para proporcionar nuevas formas de desglosar nuestros datos.

    - key: sections.features.description
      t: |
          Puede que JavaScript se mueva rápido, pero parece que los desarrolladores de JavaScript se mueven aún más rápido, ya que muchas características relativamente nuevas ya muestran altos niveles de adopción. 

    - key: sections.technologies.description
      t: |
          Los resultados de este año apuntan a un alto grado de fragmentación en el mundo de JavaScript. Pero si bien esto a veces puede causar dolores de cabeza, toda esa competencia genera un ecosistema muy dinámico.

    - key: sections.tools_others.description
      t: |
          Elegir una tecnología a menudo puede reducirse a una serie de decisiones difíciles entre
          prioridades opuestas, y este año tratamos de capturar este proceso utilizando un nuevo formato de pregunta estilo paréntesis. 

    - key: sections.environments.description
      t: |
          Durante mucho tiempo, la accesibilidad ha sido una idea tardía cuando se trata de desarrollo web, pero actualmente muchos desarrolladores
          se están dando cuenta de que, de hecho, debería ser la base de todo lo demás.

    - key: sections.resources.description
      t: |
          Destacar blogs, podcasts y sitios fue un buen comienzo, pero este año decidimos ir un paso más allá.
          ¡y realmente destacar las personas que son miembros de la comunidad de JavaScript!

    - key: sections.opinions.description
      t: |
          Ya sean los puntos débiles los que te retienen en la actualidad o las características que hacen falta y que esperas utilizar
          mañana,  ¡esta fue tu oportunidad de desahogarte y compartir tus quejas sobre JavaScript!

    ###########################################################################
    # Charts
    ###########################################################################
     
    - key: options.features_categories.language
      aliasFor: sections.language.title
    - key: options.features_categories.browser_apis
      aliasFor: sections.browser_apis.title
    - key: options.features_categories.other_features
      aliasFor: sections.other_features.title

    - key: blocks.tools_quadrant.description
      t: |
        Esta gráfica muestra el **índice de satisfacción** (o **índice de interés**) de cada tecnología sobre el **recuento total de usuarios**.
        Se puede dividir en cuatro cuadrantes:

          - **1**: Bajo uso, alta satisfacción. Tecnologías que merecen que les eches un ojo.

          - **2**: Muy utilizadas, alta satisfacción. Tecnologías seguras para adoptar.

          - **3**: Bajo uso, baja satisfacción. Tecnologías que son difíciles de recomendar en la actualidad.

          - **4**: Muy utilizadas, baja satisfacción. Vuelve a evaluar estas tecnologías si las estás utilizando actualmente.

    ###########################################################################
    # Notes
    ###########################################################################

    - key: blocks.gender.note
      t: |
          Si estás interesado/a en obtener más información, [escribimos un artículo](https://dev.to/sachagreif/is-our-survey-biased-against-women-49oj) que habla sobre cómo fue la dinámica para generar la encuesta.

    - key: blocks.currently_missing_from_css.note
      t: |
          Puedes explorar el conjunto completo de datos de respuestas a esta pregunta en [este proyecto paralelo] (https://whatsmissingfromcss.com/).

    - key: blocks.source.note
      t: >
      
        Esta gráfica es una combinación de referencias, parámetros de URL y respuestas de forma libre.

        - Estado de JS: la lista de correo del [estado de JS](https://stateofjs.com).

        - Estado de CSS: la lista de correos del estado de CSS; también coincide con `correo`, `por correo`, etc.

        - Trabajo: coincide con `trabajo`, `colegas`, `compañeros de trabajo`, etc.

    ###########################################################################
    # Awards
    ###########################################################################

    - key: award.feature_adoption_delta_award.comment
      t: Con una progresión de  **{value}** en 2021, el operador coalescente nulo (??) se ha convertido rápidamente en una parte integral de JavaScript.

    - key: award.tool_usage_delta_award.comment
      t: esbuild tiene apenas dos años, pero con una progresión de **{value}** en el último año ya está ganando terreno.

    - key: award.tool_satisfaction_award.comment
      t: Vite ocupa el primer lugar con un altísimo índice de satisfacción de **{value}**.

    - key: award.tool_interest_award.comment
      t: ¡Con una relación de interés de **{value}**, Vite vuelve a ganar el oro!

    - key: award.most_write_ins_award.comment
      t: Muchas preguntas también aceptaron respuestas por escrito, y con **{value}** menciones Elm fue el elemento más popular.
      

    ###########################################################################
    # Conclusion
    ###########################################################################

    - key: sections.conclusion.description
      t: |

            <span class="first-line">JavaScript se encuentra en un estado tremendamente mejor hoy en comparación con 2016.</span>
            
            Cuando se realizó la primera encuesta del estado de JS, sólo el 21% de los encuestados usaba TypeScript en comparación con el 69% actual. Mientras que solíamos bromear sobre el lanzamiento de un nuevo marco de front-end todo los días, **React** y **Vue** han sido dominantes durante 6 años consecutivos. Y el porcentaje de encuestados que respondieron que "JS se está moviendo demasiado rápido" se redujo del 59% al 38%. 

            Esto no quiere decir que el lenguaje se haya detenido. Las API **Optional Chaining** y **Nullish Coalescing** se han disparado hasta convertirse en las nuevas API más utilizadas en nuestra encuesta, a pesar de tener solo 2 años. Y hay más cosas buenas en camino desde TC39: informó que la gestión de fechas es una de las principales características que faltan, y la API temporal alcanzó recientemente la [Etapa 3] (https://github.com/tc39/proposal-temporal).

            El ecosistema de herramientas también está experimentando su propia evolución rápida, y es justo decir que 2021 ha sido el año de **Vite**. Vite no sólo debutó con un 98% de satisfacción, sino que su uso ya está en un 30% en su primer año en nuestra encuesta, incluso sobrepasando esbuild. Vite no es el único que intenta mejorar el estado de las herramientas de compilación de JavaScript: ¡8 de las 12 herramientas que rastreamos hoy tienen menos de dos años! Y aunque **pnpm**, **Turborepo** y **Nx** ocuparon los primeros lugares en nuestro primer año de seguimiento de herramientas monorepo, solo el 25% de los encuestados están satisfechos con el estado de está categoría, lo que demuestra que aún queda mucho trabajo por hacer. 
            
            También notable: muchos nuevos participantes como **Deno**, **Rome**, **Astro**, **Remix** y más que cuentan con el apoyo de empresas respaldadas por capital de riesgo, lo que quizás representa una alternativa viable a los frágiles desarrollos libres.

            A medida que la [Tercera edad de JavaScript](https://www.swyx.io/js-third-age/) ingresa a su tercer año, las oportunidades para los aspirantes y emprendedores de desarrollos de código abierto continúan formandonse, y estoy emocionado de ver lo que traerán los próximos dos años!

    - key: conclusion.bio
      t: Jefe de DX en Temporal

    ###########################################################################
    # Picks
    ###########################################################################

    - key: picks.my_pick
      t: 'Mis selecciones de 2021: '
    - key: picks.intro
      t: Pedimos a los miembros de la comunidad de CSS que compartieran su "selección del año"

    - key: picks.lee_robinson.name
      t: SvelteKit
    - key: picks.lee_robinson.bio
      t: Director of Developer Relations at Vercel
    - key: picks.lee_robinson.description
      t: |
          SvelteKit es una nueva versión para desarrollo web y tiene una increíble comunidad de seguidores apasionada y en crecimento. 

    - key: picks.vadim_makeev.name
      t: Procesamiento en el lado del servidor
    - key: picks.vadim_makeev.bio
      t: DevRel, Podcaster & Web Standards Advocate
    - key: picks.vadim_makeev.description
      t: |
          Ha llegado el momento de aclarar nuestras prioridades.
          UX > DX, y siempre ha sido así. ¡Rendimiento para el éxito!
            
    - key: picks.ben_ilegbodu.name
      t: Lee Robinson
    - key: picks.ben_ilegbodu.bio
      t: Ben Ilegbodu, Principal Frontend Engineer @ Stitch Fix
    - key: picks.ben_ilegbodu.description
      t: |
          Lee ha sido una gran guía para dar a conocer Next.js. 
          Él me ha ayudado bastante con Next y continua contruyendo entusiasmo
          por su camino en el futuro
            
    - key: picks.shawn_wang.name
      t: Supabase
    - key: picks.shawn_wang.bio
      t: Head of DX at Temporal
    - key: picks.shawn_wang.description
      t: |
          Supabase está haciendo Postgres accesible a más desarrolladores y mostrando a 
          todos  cómo un pequeño equipo enfocado puede superar a equipos de 10 veces su tamaño.

    - key: picks.sarah_drasner.name
      t: Pawel Kozlowski
    - key: picks.sarah_drasner.bio
      t: 
    - key: picks.sarah_drasner.description
      t: |
          Pawel Kozlowski es el tipo de desarrollador que puede tener la mente abierta a diferentes
          enfoques con humildad y curiosidad con el interés de mejorar las cosas.

    - key: picks.sara_vieira.name
      t: Paul Henschel
    - key: picks.sara_vieira.bio
      t: International Agent of JS Bullshit
    - key: picks.sara_vieira.description
      t: |
          El trabajo de Paul en animacions y ReactThreeFiber 
          han echo que hacer cualquier tipo de trabajo en 3D en la web sea mucho más fácil. 

    - key: picks.mark_erikson.name
      t: Ryan Carniato
    - key: picks.mark_erikson.bio
      t: Redux Maintainer
    - key: picks.mark_erikson.description
      t: |
          El framework reactivo de Ryan, SolidJS, llegó a la versión 1.0, 
          y Ryan escribió numerosos artículos analizando conceptos avanzados
          de implementación del framework JS.
    
    - key: picks.miguel_angel_duran.name
      t: Vite
    - key: picks.miguel_angel_duran.bio
      t: Front End Dev & Twitch Coding Streamer
    - key: picks.miguel_angel_duran.description
      t: | 
          Además de esbuild y swc, herramientas fantásticas que impulsan el ecosistema,
          Estoy disfrutando Vite. Tiene un DX encantador y una gran lista de características.
      
    - key: picks.alyssa_nicoll.name
      t: BroccoDev's Twitch Stream
    - key: picks.alyssa_nicoll.bio
      t: Sr. Developer Advocate at Progress
    - key: picks.alyssa_nicoll.description
      t: |
        Mike Brocchi recientemente comenzó a transmitir a Twitch. Es un programador brillante,
        desarrollador y, sobre todo, profesor.
        Siempre me divierto viendo sus transmisiones y aprendiendo de él.
      
    - key: picks.michael_jackson.name
      t: esbuild
    - key: picks.michael_jackson.bio
      t: Co-foundador de Remix
    - key: picks.michael_jackson.description
      t: |
        Hemos estado construyendo el compilador Remix sobre esbuild y
        definitivamente ha subido estándares del en lo que respecta a los paquetes de JS.
        Es increíblemente rápido y la API nos permite hacer casi todo lo que queremos.

    - key: picks.david_khourshid.name
      t: Remix
    - key: picks.david_khourshid.bio
      t: Pianist and founder of Stately
    - key: picks.david_khourshid.description
      t: |
          Remix es un framework web de pila completa que se siente antiguo, pero en el buen sentido,
          porque te pone en el camino para crear aplicaciones web modernas, rápidas, complejas y accesibles.
      
    - key: picks.kent_c_dodds.name
      t: Fly.io
    - key: picks.kent_c_dodds.bio
      t: Director of Developer Experience, Remix
    - key: picks.kent_c_dodds.description
      t: |

          Fly me permitió (un ingeniero front-end con desdén por DevOps)
          implementar con confianza una aplicación de nivel de producción del mundo real,
          distribuida globalmente.

    - key: picks.tejas_kumar.name
      t: Joe Haddad
    - key: picks.tejas_kumar.bio
      t: Web Developer, Conference Speaker, and Director of DevRel at Xata
    - key: picks.tejas_kumar.description
      t: |   
          Joe trabaja en Next.js en Vercel y busca constantemente demostrar
          con orgullo su poder mientras escucha activamente
          a los comentarios de la comunidad para apoyarlos mejor.

    - key: picks.wes_bos.name
      t: TC39 Proposals
    - key: picks.wes_bos.bio
      t: Profesor de JavaScript & Presentador de Podcasts
    - key: picks.wes_bos.description
      t: |
         Un repositorio de Git lleno de todas las cosas que se han propuesto para  agregar a JavaScript. Es realmente divertido leer todas las ideas que la gente tiene para el lenguage y verlas pasar por las etapas.
      
    - key: picks.scott_tolinkski.name
      t: SvelteKit
    - key: picks.scott_tolinkski.bio
      t: Creador de Level-Up Tuts, co-presentador de Syntax
    - key: picks.scott_tolinkski.description
      t: |    
          Svelte Kit proporciona la increíble experiencia de desarrollado de Svelte con todas
          las características modernas que se esperan de una plataforma web.

    - key: picks.xxxx.name
      t:
    - key: picks.xxxx.bio
      t: 
    - key: picks.xxxx.description
      t: |   
###########################################################################
# Sponsors
###########################################################################

    - key: partners.frontendmasters.description
      t: Mejore sus habilidades con cursos de ingeniería avanzados y modernos.
    - key: partners.polypane.description
      t: El navegador para desarrolladores ambiciosos. Crea sitios web adaptables, accesibles y rápidos facilmente.
    - key: partners.google_chrome.description
      t: Gracias el equipo de Google Chrome team por apoyar nuestro trabajo.

###########################################################################
# FAQ/About
###########################################################################
    
    - key: about.content
      t: >
            
            La encuesta del estado de JS de 2021 se realizó del 13 de enero al 2 de febrero de **2022** y recopiló 16085 respuestas. La encuesta es dirigida por mi, [Sacha Greif](https://sachagreif.com/), con la ayuda de un equipo de colaboradores y consultores de código abierto.

            El logo y camiseta de este año fueron diseñados por [Christopher Kirk-Nielsen](http://chriskirknielsen.com/).

            ### Objetivos de la encuesta

            Esta encuesta, junto con la encuesta [Estado de CSS](https://stateofcss.com/), se creó para identificar las próximas tendencias en el ecosistema de desarrollo web a fin de ayudar a los desarrolladores a tomar decisiones tecnológicas.

            Como tal, estas encuestas se centran en anticipar lo que vendrá en los próximos años en lugar de analizar lo que es popular en el momento, por lo que no siempre se incluyen las características o tecnologías que están más utilizadas actualmente.

            También deben tomarse como una **toma instantánea de un subconjunto específico de desarrolladores**, y no pretende hablar por todo el ecosistema.
            
            ### Diseño de la encuesta

            Parte de laa encuesta fue diseñada en base a la encuesta del año pasado, con un período de comentarios abierto donde se discutió el esquema de la encuesta [en GitHub] (https://github.com/StateOfJS/Monorepo/issues/56).
            
            Todas las preguntas de la encuesta fueron opcionales.

            ### Audiencia de la encuesta

            La encuesta fue accesible públicamente en la web y los encuestados no fueron filtrados ni seleccionados de ninguna manera. Los encuestados fueron principalmente una combinación de encuestados de encuestas anteriores (alertados a través de una lista de correo dedicada) y tráfico de redes sociales.
            

            Tenga en cuenta que los framework, las librerías, etc. fueron libres de animar a su audiencia a participar en la encuesta y algunos de ellos lo hicieron a través de pancartas, tweets, etc. Se incluye un desglose detallado de las fuentes de tráfico en la gráfica de "Fuentes".

            ### Representatividad e inclusión
 
            Si bien creemos que es importante dar voz a cada comunidad, la realidad es que una encuesta abierta como esta siempre tendrá dificultades para representar adecuadamente a todos, especialmente cuando opera a través de sistemas que ya tienen sus propios sesgos inherentes.


            Para contrarrestar esto, estamos implementando tres estrategias distintas:


            - **Outreach**: siempre tratamos de llegar a diferentes organizaciones (como organizaciones enfocadas en BIPOC o LGBTQ, o plataformas de enseñanza en línea) para tratar de diversificar nuestra propia audiencia.
            
            - **Análisis de los datos**: a través de características como facetas y variantes, siempre intentamos que sea más fácil sacar a la luz las voces de cualquier segmento demográfico, sin importar cuán minoritario pueda ser en nuestros datos.
            
            - **Bajar las barreras**: hacer que la encuesta sea demasiada larga, inaccesible, lenta para cargar, sólo en inglés, etc. puede contribuir a imponer una "costo de esfuezo" que excluye a las partes de la comunidad que no pueden pagarlo. La solución de estos problemas puede reducir la barrera de entrada y, en el proceso, hacer que nuestra audiencia sea más diversa.

            ### Financiamiento del proyecto
    
            La financiación de este proyecto proviene de una variedad de fuentes:


            - **Venta de camisetas**. 

            - **Gráficas de Patrocinadores**: los miembros de la comunidad pueden donar a la encuesta a cambio de que su nombre aparezca en los resultados.

            - **Enlaces de patrocinadores**: los enlaces a los recursos recomendados en la parte inferior de cada página son proporcionados por nuestro socio [Frontend Masters] (https://frontendmasters.com/).
            
            - **Otros fondos**: este año, el equipo de trabajo de [Google Chrome](https://www.google.com/chrome/) reservó un pequeño presupuesto para ayudar a contratar a un [consultor de accesibilidad](https://fossheim.io/) para trabajar en las encuestas CSS y JS.

            A pesar de estas fuentes de financiación, la encuesta sigue siendo en su mayoría un proyecto autofinanciado en general y cualquier contribución o patrocinio sería muy apreciada. En especial, me gustaría trabajar en estrecha colaboración con más proveedores de navegadores, ya que desempeñan un papel central en el ecosistema web.
            
            ### Resumen técnico

            Puedes encontrar un informe técnico más detallado de cómo se desarrollan las encuestas [aquí](https://dev.to/sachagreif/how-the-state-of-js-css-surveys-are-run-4lnb).

            - **Recopilación de datos**: personalizada [Vulcan.js](http://vulcanjs.org/) app.

            - **Almacenamiento/procesamiento de datos**: Agregaciones en MongoDB & MongoDB.
            
            - **API de datos**: Node.js GraphQL API. 
            
            - **Sitio de resultados**: [Gatsby](https://www.gatsbyjs.com/) applicación en React.
            
            - **Visualizaciones de datos**: [Nivo](https://nivo.rocks/) React dataviz librería. 
            
            - **Tipo de fuente**: [IBM Plex Mono](https://fonts.google.com/specimen/IBM+Plex+Mono) y [Bebas Neue](https://fonts.google.com/specimen/Bebas+Neue).
